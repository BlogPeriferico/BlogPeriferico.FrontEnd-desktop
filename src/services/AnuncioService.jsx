import api from "./Api";

const AnuncioService = {
  // Criar novo an√∫ncio
  criarAnuncio: async (anuncioData) => {
    console.log("üì§ Criando an√∫ncio com dados (antes de limpar):", anuncioData);

    // Remove id caso seja um objeto normal
    if (!(anuncioData instanceof FormData) && anuncioData.id !== undefined) {
      delete anuncioData.id;
    }

    const token = localStorage.getItem("token");
    if (!token) {
      console.error("‚ö†Ô∏è Usu√°rio n√£o est√° logado.");
      throw new Error("Usu√°rio n√£o est√° logado.");
    }

    const config = {
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type":
          anuncioData instanceof FormData
            ? "multipart/form-data"
            : "application/json",
      },
    };

    try {
      const response = await api.post("/vendas", anuncioData, config);
      console.log("‚úÖ Resposta do backend ao criar an√∫ncio:", response.data);
      return response.data;
    } catch (err) {
      console.error("‚ùå Erro ao criar an√∫ncio:", err.response?.data || err);
      throw err;
    }
  },

  // Listar todos os an√∫ncios
  getAnuncios: async () => {
    console.log("üì• Carregando lista de an√∫ncios...");
    try {
      const response = await api.get("/vendas");
      console.log("‚úÖ Lista de an√∫ncios recebida:", response.data);
      return response.data;
    } catch (err) {
      console.error("‚ùå Erro ao listar an√∫ncios:", err.response?.data || err);
      throw err;
    }
  },

  // Buscar an√∫ncio por ID
  buscarAnuncioPorId: async (id) => {
    console.log("üîç Buscando an√∫ncio com ID:", id);
    try {
      const response = await api.get(`/vendas/${id}`);
      console.log("‚úÖ An√∫ncio recebido:", response.data);
      return response.data;
    } catch (err) {
      console.error(`‚ùå Erro ao buscar an√∫ncio ${id}:`, err.response?.data || err);
      throw err;
    }
  },

  // Atualizar an√∫ncio
  atualizarAnuncio: async (id, anuncioData) => {
    console.log(`‚úèÔ∏è Atualizando an√∫ncio ${id} com dados:`, anuncioData);

    const token = localStorage.getItem("token");
    if (!token) {
      console.error("‚ö†Ô∏è Usu√°rio n√£o est√° logado.");
      throw new Error("Usu√°rio n√£o est√° logado.");
    }

    const config = {
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type":
          anuncioData instanceof FormData
            ? "multipart/form-data"
            : "application/json",
      },
    };

    try {
      const response = await api.put(`/vendas/${id}`, anuncioData, config);
      console.log(`‚úÖ An√∫ncio ${id} atualizado com sucesso:`, response.data);
      return response.data;
    } catch (err) {
      console.error(`‚ùå Erro ao atualizar an√∫ncio ${id}:`, err.response?.data || err);
      throw err;
    }
  },

  // Excluir an√∫ncio
  excluirAnuncio: async (id) => {
    console.log("üóëÔ∏è Excluindo an√∫ncio com ID:", id);

    const token = localStorage.getItem("token");
    if (!token) {
      console.error("‚ö†Ô∏è Usu√°rio n√£o est√° logado.");
      throw new Error("Usu√°rio n√£o est√° logado.");
    }

    try {
      const response = await api.delete(`/vendas/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      console.log(`‚úÖ An√∫ncio ${id} exclu√≠do com sucesso.`, response.data);
      return response.data;
    } catch (err) {
      console.error(`‚ùå Erro ao excluir an√∫ncio ${id}:`, err.response?.data || err);
      throw err;
    }
  },
};

export default AnuncioService;
